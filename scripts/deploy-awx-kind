#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/_env"
. "$HERE/_trap"

not_root

# See: https://github.com/ansible-community/awx-operator-helm

TIMEOUT=180s

if [ "$1" == -c ]; then
	m 'deleting AWX...'
	"$HERE/kubectl-kind" delete --filename="$ROOT/assets/kubernetes/workloads/awx.yaml" --wait || true
	"$HERE/kubectl-kind" delete --filename="$ROOT/assets/kubernetes/workloads/awx-secret.yaml" --wait || true

	m 'deleting AWX operator...'
	helm uninstall awx-operator --kube-context=kind-tko --namespace=tko --wait || true

	m 'deleting AWX database...'
	"$HERE/psql-kind" --command='DROP DATABASE IF EXISTS awx;' || true
fi

m 'deploying AWX operator...'
helm repo add awx-operator https://ansible-community.github.io/awx-operator-helm/
helm install awx-operator awx-operator/awx-operator --version="$AWX_OPERATOR_HELM_CHART_VERSION" --kube-context=kind-tko --namespace=tko || true

# TODO
# https://github.com/ansible/awx-resource-operator

m 'waiting for AWX operator...'
"$HERE/kubectl-kind" wait deployment/awx-operator-controller-manager --timeout="$TIMEOUT" --for=condition=available --namespace=tko

m 'creating AWX database...'
"$HERE/psql-kind" --command='CREATE DATABASE awx;' || true

m 'deploying AWX...'
"$HERE/kubectl-kind" apply --filename="$ROOT/assets/kubernetes/workloads/awx.yaml"

m 'waiting for AWX...'
"$HERE/kubectl-kind" wait awx/awx --timeout="$TIMEOUT" --for=condition=running --namespace=tko

set +e
while true; do
	waiting 'waiting for AWX service account...'
	if "$HERE/kubectl-kind" get serviceaccount/awx --namespace=tko > /dev/null 2>&1; then
		break
	fi
	sleep 0.5
done
set -e
end_waiting 'AWX service account created'

m 'creating AWX secret...'
# The secret will be immediately deleted if the service account doesn't exist
kubectl apply --filename="$ROOT/assets/kubernetes/workloads/awx-secret.yaml"

set +e
while true; do
	waiting 'waiting for AWX setup (>5 minutes)...'
	if "$HERE/awx-kind" ping > /dev/null 2>&1; then
		break
	fi
	sleep 0.5
done
set -e
end_waiting 'AWX is up, access at: http://localhost:30053'

# Debugging:
# kubectl logs deployment/awx-operator-controller-manager --namespace=tko --follow
# kubectl logs deployment/awx --container=awx-web --namespace=tko --follow
