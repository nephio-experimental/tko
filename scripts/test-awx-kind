#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/_env"
. "$HERE/_awx"
. "$HERE/_trap"

not_root

if [ "$1" == -c ]; then
	delete_workflow_template 'Deploy DU'
	delete_job_template 'Provision Cluster'
	delete_job_template 'Schedule DU'
	delete_job_template 'Prepare DU'
	delete_job_template 'Schedule Plugin'
	delete_inventory 'Chicago Sites'
	delete_inventory 'Bangalore Sites'
	delete_project Foobar
	delete_execution_environment TKO
fi

delete_job_template 'Demo Job Template'
delete_inventory 'Demo Inventory'
delete_project 'Demo Project'

create_execution_environment TKO "$DOCKER_REPOSITORY/$DOCKER_REGISTRY/tko-ansible-execution-environment" || true

m 'uploading AWX project...'

rm --recursive --force /tmp/tko/awx-projects/*
cp --recursive "$ROOT/examples/ansible/foobar" /tmp/tko/awx-projects/ # see: assets/kubernetes/kind/tko/yaml
gitify /tmp/tko/awx-projects/foobar/

TKO_DATA_HOST=tko-data:50050

# See: assets/workloads/awx.yaml
K8S_AUTH_HOST=https://kubernetes.default.svc
K8S_AUTH_API_KEY=$(kubectl get secret awx-tko --namespace=tko --output=jsonpath='{.data.token}' | base64 --decode)
K8S_AUTH_SSL_CA_CERT_CONTENT=$(kubectl get secret awx-tko --namespace=tko --output=jsonpath='{.data.ca\.crt}' | base64 --decode)

create_project Foobar foobar || true

create_inventory 'Chicago Sites' || true
create_inventory_source 'Chicago Sites' TKO TKO Foobar inventory-sites.py \
	--arg TKO_DATA_HOST "$TKO_DATA_HOST" \
	--arg TKO_METADATA_PATTERNS 'Site.region: chicago' || true

create_inventory 'Bangalore Sites' || true
create_inventory_source 'Bangalore Sites' TKO TKO Foobar inventory-sites.py \
	--arg TKO_DATA_HOST "$TKO_DATA_HOST" \
	--arg TKO_METADATA_PATTERNS 'Site.region: bangalore' || true

create_job_template 'Provision Cluster' Foobar provision-cluster.yaml TKO false \
	--arg K8S_AUTH_HOST "$K8S_AUTH_HOST" \
	--arg K8S_AUTH_API_KEY "$K8S_AUTH_API_KEY" \
	--arg K8S_AUTH_SSL_CA_CERT_CONTENT "$K8S_AUTH_SSL_CA_CERT_CONTENT" || true
create_job_template 'Prepare DU' Foobar prepare-du.yaml TKO false || true
create_job_template 'Schedule DU' Foobar schedule-du.yaml TKO false || true
create_job_template 'Schedule Plugin' Foobar schedule-plugin.yaml TKO true || true

# Due to a missing feature in awx CLI, we cannot create a full workflow, so we will use a playbook instead
ANSIBLE_LOCALHOST_WARNING=false ANSIBLE_INVENTORY_UNPARSED_WARNING=false \
"$PYTHON_ENV/bin/ansible-playbook" "$ROOT/examples/ansible/initialize-foobar.yaml"

launch_workflow 'Deploy DU' 'Chicago Sites'

"$HERE/tko-kind" plugin register schedule kind --executor=ansible 'Schedule Plugin' --property=_awx.inventory='Chicago Sites' --property=_awx.host=http://awx-service:80 --property=_awx.username=admin --property=_awx.password=tko --trigger=kind.x-k8s.io,v1alpha4,Cluster -v
