#!/bin/bash
set -e

HERE=$(dirname "$(readlink --canonicalize "$BASH_SOURCE")")
. "$HERE/_env"
. "$HERE/_awx"
. "$HERE/_trap"

not_root

if [ "$1" == -c ]; then
	delete_workflow_template 'Deploy site'
	delete_job_template 'Deploy free5GC UPF'
	delete_project TKO
	delete_inventory 'TKO Sites'
	delete_inventory 'TKO Deployments'
	delete_execution_environment TKO
fi

m 'uploading AWX playbooks...'

#sudo chmod a+w --recursive /tmp/tko/awx-projects/
rm --recursive --force /tmp/tko/awx-projects/*
cp --recursive "$ROOT/examples/ansible/tko" /tmp/tko/awx-projects/ # see: assets/kubernetes/kind/tko/yaml
gitify /tmp/tko/awx-projects/tko/

# To install Galaxy collections into our project:
#"$PYTHON_ENV/bin/ansible-galaxy" collection install ginigangadharan.collection_demo --force --collections-path="/tmp/tko/awx-projects/tko/collections"

# Hack: playbooks can only access files within the project, so we will copy the service account info into it
#POD=$("$HERE/kubectl-kind" get pods --selector=app.kubernetes.io/name=awx-web --field-selector=status.phase=Running --namespace=tko --output=jsonpath={.items[0].metadata.name})
#"$HERE/kubectl-kind" exec "pod/$POD" --container=awx-task --namespace=tko -- cp --recursive /var/run/secrets/kubernetes.io/serviceaccount /var/lib/awx/projects/tko/

create_execution_environment TKO "docker.io/$DOCKER_REGISTRY/tko-ansible-execution-environment" || true

create_project TKO tko || true

create_inventory 'TKO Sites' || true
create_inventory_source 'TKO Sites' Sites TKO TKO inventory-sites.py || true

#create_inventory 'TKO Deployments' || true
#create_inventory_source 'TKO Deployments' Deployments TKO TKO inventory-deployments.py || true

create_job_template 'Deploy free5GC UPF' TKO deploy.yaml TKO 'TKO Sites' || true

# Currently we cannot create a full workflow from the CLI, so we will use a playbook instead.
ANSIBLE_LOCALHOST_WARNING=false ANSIBLE_INVENTORY_UNPARSED_WARNING=false \
"$PYTHON_ENV/bin/ansible-playbook" "$ROOT/examples/ansible/create_workflows.yaml"

launch_workflow 'Deploy site'
